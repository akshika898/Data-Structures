----Kdanes algorithm--
Input:
N = 5
arr[] = {1,2,3,-2,5}
Output: 9
Explanation: Max subarray sum is 9
of elements (1, 2, 3, -2, 5) which 
is a contiguous subarray.
 

Example 2:

Input:
N = 4
arr[] = {-1,-2,-3,-4}
Output: -1
Explanation: Max subarray sum is -1 
of element (-1)


public int maxSubArray(int[] nums) {
    int max_sum=nums[0];
    int current=0;
    for(int i=0;i<nums.length;i++){   
       current+=nums[i];  
        if(max_sum<current)
            max_sum=current;
        
        if(current<0)
           current=0;
    }
    return max_sum;
    }


// if we need to find the start and end index of subarray
the change it as 


public int maxSubArray(int[] nums) {
    int max_sum=nums[0];
    int current=0,start=0,end=0,s=0;
    for(int i=0;i<nums.length;i++){   
       current+=nums[i];  
        if(max_sum<current)
          {
            max_sum=current;
             start=s;
             end=i;
          }
        
        if(current<0)
         {
           current=0;
           s=i+1;
          }
    }
    return max_sum;
    }



