0(n2)-worst time if it is left skewed tree

  static int largestBst(Node root)
        {
            if(root==null)
                return 0;
            if(bst(root,Integer.MIN_VALUE,Integer.MAX_VALUE))
                 return size(root);
            return Math.max(largestBst(root.left),largestBst(root.right));
        }
        static int size(Node root)
        {
            if(root==null)
            return 0;
            return 1+size(root.left)+size(root.right);
        }
        static boolean bst(Node root,int min,int max)
        {
            if(root==null)
                return true;
            if(root.data<min ||root.data>max)
                return false;
            return bst(root.left,min,root.data-1) && bst(root.right,root.data+1,max);
        }
}