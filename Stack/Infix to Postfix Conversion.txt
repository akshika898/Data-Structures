static int prec(char ch)
{
  if(ch=='+' || ch=='-')
    return 1;
  else if(ch=='*' || ch=='/')
    return 2;
  if(ch=='^')
    return 3;
  return -1;  
}
static int peek(CQStack s)
{
  int top=s.top;
  return s.stackArray[top];
}
static String infixToPostfix(CQStack s, String exp)
{
	String result="";
  for(int i=0;i<exp.length();i++)
  {
    char ch=exp.charAt(i);
    if((ch>='a' && ch<='z') || (ch>='A' && ch<='Z'))
      result+=ch;
    else if(ch=='(')
      s.push('(');
    else if(ch==')')
    {
      while(!s.isEmpty() && peek(s)!='(')
        result+=(char)s.pop();
      s.pop();
    }
    else{
      while(!s.isEmpty()&& prec(ch)<=prec((char)peek(s)))
        result+=(char)s.pop();
      s.push(ch);
    }
  }
    while(!s.isEmpty())
      result+=(char)s.pop();
    return result;
  
}