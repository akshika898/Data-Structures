method 1:o(n2)

Run two loops. Outer loop picks all elements 1-1. Inner
loop finds freq of the picked element and compares with
the max so far.

METHOD 2:
	Arrays.sort(a);
	int max=1,curr=1,res=a[0];
	for(int i=1;i<n;i++)
	{
	    if(a[i]==a[i-1])
	    curr++;
	    else{
	        if(curr>max)
	        {
	            max=curr;
	            res=a[i-1];
	        }
	            curr=1;
	    }
	}
	System.out.println(res);


method 3: hash

Map<Integer, Integer> h= new HashMap<Integer, Integer>(); 
          
        for(int i = 0; i < n; i++) 
        { 
            if(h.containsKey(arr[i])) 
            { 
                int freq = h.get(arr[i]); 
                freq++; 
                h.put(arr[i], freq); 
            } 
            else
            { 
                h.put(arr[i], 1); 
            } 
        }  
        int max_count = 0, res = -1; 
        for(Entry<Integer, Integer> val : h.entrySet()) 
        { 
            if (val.getValue()>max_count ) 
            { 
                res = val.getKey(); 
                max_count = val.getValue(); 
            } 
        } 
          
        return res; 
    
