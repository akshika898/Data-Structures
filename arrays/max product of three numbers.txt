//o(nlogn)

    public int maximumProduct(int[] a) {
        Arrays.sort(a);
        int n=a.length;
        return Math.max(a[0] *a[1] *a[n - 1], a[n - 1] *
                                             a[n - 2] * a[n- 3]);
    }



//o(n)

    public int maximumProduct(int[] nums) {
        int min1 = Integer.MAX_VALUE,
             min2 = Integer.MAX_VALUE;
        int max1 = Integer.MIN_VALUE, 
             max2 = Integer.MIN_VALUE, 
             max3 = Integer.MIN_VALUE;
        for (int n: nums) {
            if (n <= min1) {
                min2 = min1;
                min1 = n;
            } else if (n <= min2) {  
                min2 = n;
            }
            if (n >= max1) {       
                max3 = max2;
                max2 = max1;
                max1 = n;
            } else if (n >= max2) {   
                max3 = max2;
                max2 = n;
            } else if (n >= max3) {   
                max3 = n;
            }
        }
        return Math.max(min1 * min2 * max1, 
                          max1 * max2 * max3);
}