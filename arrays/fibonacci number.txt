//0(2^n) slowest approach

public class Solution {
    public int fib(int N) {
        if (N <= 1) {
            return N;
        }
        return fib(N-1) + fib(N-2);
    }
}


//o(n)

class Solution {
    public int fib(int N) {
        if (N <= 1) {
            return N;
        }
        return memoize(N);
    }

    public int memoize(int N) {
      int[] a= new int[N + 1];
     a[1] = 1;

      for (int i = 2; i <= N; i++) {
          a[i] = a[i-1] + a[i-2];
      }
      return a[N];
    }
}