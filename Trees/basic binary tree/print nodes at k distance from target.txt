int printkdistanceNode(Node node, Node target, int k)  
    { 
        if (node == null) 
            return -1; 
   
        if (node == target)  
        { 
            printkdistanceNodeDown(node, k); 
            return 0; 
        } 
  
        int dl = printkdistanceNode(node.left, target, k); 
     
        if (dl != -1)         // Check if target node was found in left subtree 
        { 
            if (dl + 1 == k)  
                System.out.print(node.data); 
            else
                printkdistanceNodeDown(node.right, k - dl - 2); 
  
            return 1 + dl; 
        } 

        int dr = printkdistanceNode(node.right, target, k); 
        if (dr != -1)  
        { 
            if (dr + 1 == k)  
                System.out.print(node.data); 

            else 
                printkdistanceNodeDown(node.left, k - dr - 2); 
            return 1 + dr; 
        } 
        return -1; 
    } 

void printNodeDown(Node node, int k)  //all nodes at given level
    { 
        if (node == null || k < 0) 
            return; 
        if (k == 0)  
        { 
            System.out.print(node.data); 
            return; 
        } 
        printNodeDown(node.left, k - 1); 
        printNodeDown(node.right, k - 1); 
    } 
   