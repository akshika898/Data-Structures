0(n2)

 void remove_duplicates() { 
        Node ptr1 = head, ptr2 = null; 
       
        while (ptr1 != null && ptr1.next != null) { 
            ptr2 = ptr1; 

            while (ptr2.next != null) { 
                if (ptr1.data == ptr2.next.data) 
                    ptr2.next = ptr2.next.next; 
                   
                else 
                    ptr2 = ptr2.next; 
            } 
            ptr1 = ptr1.next; 
        } 
   
0(n)--hashing

static void removeDuplicate(node head)  
    { 
        HashSet<Integer> hs = new HashSet<>(); 
     
        node current = head,prev = null; 
        while (current != null)  
        { 
            int curval = current.val;  
            if (hs.contains(curval)) 
                prev.next = current.next; 
             else { 
                hs.add(curval); 
                prev = current; 
            } 
            current = current.next; 
        } 
    } 