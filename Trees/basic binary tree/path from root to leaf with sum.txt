Given the root of a binary tree and an 
integer targetSum, return all root-to-leaf 
paths where each path's sum equals 
targetSum.

    public List<List<Integer>> pathSum(TreeNode root, int targetSum) {
        List<Integer> singlepath=new ArrayList<>();
        List<List<Integer>> allpath=new ArrayList<>();
        allPathSum(root,targetSum,singlepath,allpath);
        return allpath; 
    }
    public void allPathSum(TreeNode root,int sum,List<Integer> single,List<List<Integer>> all)
    {
        if(root==null)
            return;
        single.add(root.val);

        if(root.left==null &&root.right==null &&root.val==sum)
            all.add(new ArrayList<>(single));
        else{
        allPathSum(root.left,sum-root.val,single,all);
        allPathSum(root.right,sum-root.val,single,all);
        }
        single.remove(single.size()-1);
}