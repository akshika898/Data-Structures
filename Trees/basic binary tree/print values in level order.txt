static void printLevelWise(Node root)
{
  int h=height(root);
  for(int i=0;i<=h;i++)
  {
    print(root,i+1);
    System.out.println();
  }
}
static void print(Node root,int level)
{
  if(root==null)
    return; 
   if(level==1)
  {
    System.out.print(root.data+" ");
    return ;
  }
  print(root.leftChild,level-1);
  print(root.rightChild,level-1);
}
static int height(Node root)
{
if(root==null)
  return -1;
return 1+Math.max(height(root.left),height(root.right));
}

------------------------------------------------------
or(without recursion-better way)
------------------------------------------------------

  static void printLevelWise(Node root)
{
  if(root==null)
    return;
Queue<Node> q=new LinkedList<Node>();
  q.add(root);
  while(q.size()>0)
  { 
    Node top=q.remove();
    System.out.print(top.data+" ");
    if(top.left!=null)
      q.add(top.left);
    if(top.right!=null)
      q.add(top.right);
  }
}


----------------------
if(line wise)
----------------------

 static void printLevelWise(Node root)
{
  if(root==null)
    return;
Queue<Node> q=new LinkedList<Node>();
  q.add(root);
while(!q.isEmpty())
{
c=q.size();
  while(c>0)
  { 

    Node top=q.remove();
    System.out.print(top.data+" ");
    if(top.left!=null)
      q.add(top.left);
    if(top.right!=null)
      q.add(top.right);
    c--;
  }
System.out.println();
}




